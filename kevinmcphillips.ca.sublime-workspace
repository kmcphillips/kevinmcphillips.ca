{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"file": "spec/models/post_spec.rb",
			"settings":
			{
				"buffer_size": 321,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/app.rb",
			"settings":
			{
				"buffer_size": 894,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "class Post\n  include DataMapper::Resource\n\n  property :id, Serial\n  property :title, String\n  property :body, Text\n  property :permalink, String\n  property :created_at, DateTime\n\n  before :valid?, :set_permalink\n\n  validates_presence_of :title, :body, :permalink\n  validates_uniqueness_of :permalink\n\n  def path\n    \"/blog/#{permalink}\"\n  end\n  \n  def full_path\n    \"http://kevinmcphillips.ca#{path}\"\n  end\n\n  protected\n\n  ## Most of this is taken right from http://github.com/kimos/acts_as_permalink\n  def set_permalink\n    if self.permalink.blank? && !self.title.blank?\n      self.permalink = self.title.downcase.strip                      # make the string lowercase and scrub white space on either side\n      self.permalink = self.permalink.gsub(/[^a-z0-9\\w]/, \"_\")        # make any character that is not nupermic or alphabetic into an underscore\n      self.permalink = self.permalink.sub(/_+$/, \"\").sub(/^_+/, \"\")   # remove underscores on either end, caused by non-simplified characters\n      self.permalink = self.permalink[0..40]                          # trim to length\n        \n      # Attempt to find the object by the permalink\n      if Post.first(:permalink => self.permalink)\n        num = 1\n\n        # If we find the object we know there is a collision, so just add a number to the end until there is no collision\n        while Post.first(:permalink => self.permalink + num.to_s)\n          num += 1\n        end\n\n        self.permalink = self.permalink + num.to_s\n      end\n\n      self.permalink\n    end\n  end\nend\n\n",
			"file": "app/models/post.rb",
			"file_size": 1531,
			"file_write_time": 1330962882000000,
			"settings":
			{
				"buffer_size": 1531,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/RSpec/RSpec.sublime-build",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"Snippet: ",
				"Snippet: each { |e| .. }"
			]
		],
		"width": 530.0
	},
	"console":
	{
		"height": 462.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/kevin/.config/sublime-text-2/Packages/User/Distraction Free.sublime-settings",
		"/home/kevin/source/kevinmcphillips.ca/app/views/bio.haml",
		"/home/kevin/source/kevinmcphillips.ca/spec/models/account_spec.rb",
		"/home/kevin/source/kevinmcphillips.ca/spec/spec_helper.rb",
		"/home/kevin/source/kevinmcphillips.ca/spec/models/post_spec.rb",
		"/home/kevin/.config/sublime-text-2/Packages/Default/Preferences.sublime-settings"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			"<open folders>"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"permalink",
			"posts",
			"Post",
			"first",
			"haml",
			"permalink",
			"      self.permalink = self.permalink.gsub(/[^a-z0-9\\w]/, \"_\")        # make any character that is not nupermic or alphabetic into an underscore\n",
			"kevinmcphillips",
			"consult"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "spec/models/post_spec.rb",
					"settings":
					{
						"buffer_size": 321,
						"regions":
						{
						},
						"selection":
						[
							[
								151,
								151
							]
						],
						"settings":
						{
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "app/app.rb",
					"settings":
					{
						"buffer_size": 894,
						"regions":
						{
						},
						"selection":
						[
							[
								479,
								494
							]
						],
						"settings":
						{
							"spell_check": true,
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 2,
					"file": "app/models/post.rb",
					"settings":
					{
						"buffer_size": 1531,
						"regions":
						{
							"mark":
							{
								"flags": 144,
								"icon": "dot",
								"regions":
								[
								],
								"scope": "mark"
							}
						},
						"selection":
						[
							[
								10,
								10
							]
						],
						"settings":
						{
							"rulers":
							[
							],
							"spell_check": false,
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 209.0,
	"status_bar_visible": true
}
